import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import * as NavigationMenu from "@radix-ui/react-navigation-menu";
import classNames from "classnames";
import { CaretDownIcon } from "@radix-ui/react-icons";

import Link from "next/link";
import React, { LegacyRef, PropsWithChildren, RefAttributes } from "react";
import { OrbitControls } from "@react-three/drei";
import { Canvas, useFrame } from "@react-three/fiber";
import { useMemo, useRef } from "react";
import { MathUtils } from "three";

import vertexShader from "../utils/vertexShader";
import fragmentShader from "../utils/fragmentShader";

const Blob = () => {
  // This reference will give us direct access to the mesh
  const mesh = useRef();
  const hover = useRef(false);

  const uniforms = useMemo(
    () => ({
      u_intensity: {
        value: 0.3,
      },
      u_time: {
        value: 0.0,
      },
    }),
    []
  );

  useFrame((state) => {
    const { clock } = state;
    mesh.current.material.uniforms.u_time.value = 0.4 * clock.getElapsedTime();

    mesh.current.material.uniforms.u_intensity.value = MathUtils.lerp(
      mesh.current.material.uniforms.u_intensity.value,
      hover.current ? 0.85 : 0.15,
      0.02
    );
  });

  return (
    <mesh
      ref={mesh}
      style={{ height: "509px" }}
      position={[0, 0, 0]}
      scale={1}
      onPointerOver={() => (hover.current = true)}
      onPointerOut={() => (hover.current = false)}
    >
      <icosahedronGeometry args={[2, 20]} />
      <shaderMaterial
        fragmentShader={fragmentShader}
        vertexShader={vertexShader}
        uniforms={uniforms}
        wireframe={false}
      />
    </mesh>
  );
};

export default function Home() {
  return (
    <div>
      <Head>
        <title>Lewis Casewell</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div
          style={{ position: "absolute", top: 0, color: "white", zIndex: 999 }}
        >
          Lewis Casewell
        </div>
        <NavigationMenuDemo />

        <Canvas
          camera={{ position: [0.0, 0.0, 8.0] }}
          style={{ height: "100vh" }}
        >
          <Blob />
          <axesHelper />
          <OrbitControls />
        </Canvas>
      </main>
    </div>
  );
}

interface Props {
  children: React.ReactNode;
  className: string;
  title: string;
  props: any;
}

//  & Props & RefAttributes<HTMLAnchorElement>

const ListItem = React.forwardRef<HTMLAnchorElement, Props>(
  ({ className, children, title, ...props }, forwardedRef) => (
    <li>
      <NavigationMenu.Link asChild>
        <a
          className={classNames("ListItemLink", className)}
          {...props}
          ref={forwardedRef}
        >
          <div className="ListItemHeading">{title}</div>
          <p className="ListItemText">{children}</p>
        </a>
      </NavigationMenu.Link>
    </li>
  )
);

ListItem.displayName = "ListItem";

const NavigationMenuDemo = () => {
  return (
    <NavigationMenu.Root className="NavigationMenuRoot">
      <NavigationMenu.List className="NavigationMenuList">
        <NavigationMenu.Item>
          <NavigationMenu.Trigger className="NavigationMenuTrigger">
            Overview <CaretDownIcon className="CaretDown" aria-hidden />
          </NavigationMenu.Trigger>
          <NavigationMenu.Content className="NavigationMenuContent">
            <ul className="List one">
              <li style={{ gridRow: "span 3" }}>
                <NavigationMenu.Link asChild>
                  <Link className="Callout" href="/">
                    <svg
                      aria-hidden
                      width="38"
                      height="38"
                      viewBox="0 0 25 25"
                      fill="white"
                    >
                      <path d="M12 25C7.58173 25 4 21.4183 4 17C4 12.5817 7.58173 9 12 9V25Z"></path>
                      <path d="M12 0H4V8H12V0Z"></path>
                      <path d="M17 8C19.2091 8 21 6.20914 21 4C21 1.79086 19.2091 0 17 0C14.7909 0 13 1.79086 13 4C13 6.20914 14.7909 8 17 8Z"></path>
                    </svg>
                    <div className="CalloutHeading">
                      Hi, I&apos;m Lewis.
                      <br />A frontend developer
                    </div>
                    <p className="CalloutText">Click to email me.</p>
                  </Link>
                </NavigationMenu.Link>
              </li>

              <ListItem href="https://polls.lewiscasewell.com" title="Github">
                Checkout what I have been working on.
              </ListItem>
              <ListItem href="/colors" title="Twitter">
                See what I tweet about.
              </ListItem>
              <ListItem href="https://icons.radix-ui.com/" title="LinkedIn">
                If you still use LinkedIn.
              </ListItem>
            </ul>
          </NavigationMenu.Content>
        </NavigationMenu.Item>

        <NavigationMenu.Item>
          <NavigationMenu.Trigger className="NavigationMenuTrigger">
            Projects <CaretDownIcon className="CaretDown" aria-hidden />
          </NavigationMenu.Trigger>
          <NavigationMenu.Content className="NavigationMenuContent">
            <ul className="List two">
              <ListItem
                title="Shmoothies"
                href="/docs/primitives/overview/introduction"
              >
                Create your own smoothies, or find some inspiration from others.
                <br />
                Built with tRPC, Prisma, Postgres, Nextjs and finally, framer
                for animations.
              </ListItem>
              <ListItem
                title="Polls"
                href="/docs/primitives/overview/getting-started"
              >
                Need to settle a question? Start a poll.
                <br />
                This application built with Nextjs, tRPC, Prisma, PlanetScale
                and Tailwindcss.
              </ListItem>
              <ListItem
                title="Weight tracker"
                href="/docs/primitives/overview/styling"
              >
                Track your bodyweight daily.
                <br />
                This is my first PWA built using Nextjs, Firebase and
                Tailwindcss.
              </ListItem>
              <ListItem
                title="Weight tracker"
                href="/docs/primitives/overview/styling"
              >
                Track your bodyweight daily.
                <br />
                This is my first PWA built using Nextjs, Firebase and
                Tailwindcss.
              </ListItem>
              {/* <ListItem
                title="Animation"
                href="/docs/primitives/overview/animation"
              >
                Use CSS keyframes or any animation library of your choice.
              </ListItem>
              <ListItem
                title="Accessibility"
                href="/docs/primitives/overview/accessibility"
              >
                Tested in a range of browsers and assistive technologies.
              </ListItem>
              <ListItem
                title="Releases"
                href="/docs/primitives/overview/releases"
              >
                Radix Primitives releases and their changelogs.
              </ListItem> */}
            </ul>
          </NavigationMenu.Content>
        </NavigationMenu.Item>

        <NavigationMenu.Item>
          <NavigationMenu.Link
            className="NavigationMenuLink"
            href="https://github.com/radix-ui"
          >
            Github
          </NavigationMenu.Link>
        </NavigationMenu.Item>

        <NavigationMenu.Indicator className="NavigationMenuIndicator">
          <div className="Arrow" />
        </NavigationMenu.Indicator>
      </NavigationMenu.List>

      <div className="ViewportPosition">
        <NavigationMenu.Viewport className="NavigationMenuViewport" />
      </div>
    </NavigationMenu.Root>
  );
};
